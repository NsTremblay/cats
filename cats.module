<?php

/**
 * @file
 *   My cool cats Angular App module
 */

/**
 * Implements hook_menu().
 */
function cats_menu() {
  $items['cats'] = array(
    'title' => 'All cats',
    'page callback' => 'cats_page',
    'access arguments' => array('access content'),
  );

  $items['json/custom-api/cats'] = array(
    'title' => 'All cats',
    'page callback' => 'cats_json_endpoint_page',
    'access arguments' => array('access content')
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function cats_theme() {
  return array(
    'all_cats' => array(
      'template' => 'all-cats',
    ),
  );
}

/**
 * Cats page callback
 */
function cats_page() {
  // Set the path
  $path = drupal_get_path('module', 'cats');

  // Load angular
  drupal_add_library('angularjs', 'angularjs');

  // Load the app
  drupal_add_js($path . '/js/cats.gen.js');

  drupal_add_css($path . '/css/bootstrap.css');

  // Return the HTML template
  return theme('all_cats');
}

/**
 * Page callback
 */
function cats_json_endpoint_page() {
  header('Content-type: application/json');
  print json_encode(get_all_cats_json_array());
  exit();
}

/**
 * All cats as JSON ready array
 */
function get_all_cats_json_array() {
  $cats = array();

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'cat')
    ->propertyCondition('status', 1)
    ->range(0, 10);

  $result = $query->execute();

  $json_cats = array();
  if (isset($result['node'])) {
    $cats_nids = array_keys($result['node']);
    $cats = entity_load('node', $cats_nids);
    foreach ($cats as $cat) {
      $cat_wrapper = entity_metadata_wrapper('node', $cat);

      $body = $cat_wrapper->body->value();
      $image = $cat_wrapper->field_cat_image->value();

      $json_cats['nodes'][] = array(
        'node' => array(
          'title' => $cat->title,
          'Body' => $body['value'],
          'Image' => image_style_url('medium', $image['uri']),
         ),
      );
    }
  }

  return $json_cats;
}
